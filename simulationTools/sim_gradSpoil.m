%sim_gradSpoil.m
%Jamie Near, 2014.
%
% USAGE:
% d_out = sim_gradSpoil(d_in,H,gradVect,posVect,dur)
% 
% DESCRIPTION:
% This function simulates the effect of a rectangular spoiler gradient 
% with a given amplitude, direction and duration.  
% 
% INPUTS:
% d_in      = input density matrix structure.
% H         = Hamiltonian operator structure.
% gradVect  = Vector of spoiler gradient amplitudes [Gx Gy Gz] in G/cm.
% posVect   = Position vector of spins of interest [x y z] in cm.
% dur       = Duration of the gradient pulse in ms.
%
% OUTPUTS:
% d_out     = output density matrix following spoiler gradient.

function d_out = sim_gradSpoil(d_in,H,gradVect,posVect,dur)

%gamma
gamma=42577000; %[Hz/T]

%Convert gradVect into T/m
gradVect=gradVect/100;

%Convert posVect into m
posVect=posVect/100;

%convert dur into s
dur=dur/1000;

%Calculate the actual gradient field at point [x,y,z] in units of Tesla:
B_gradTotal=dot(gradVect,posVect);

%The phase (in radians) generated by the gradient pulse is given by 2*pi*gamma*B*dt
angle=2*pi*gamma.*B_gradTotal*dur;

for n=1:length(H) %JN - Loop through the different parts of the spin system
    %Make spoiler hamiltonians;
    spoil=zeros(2^H(n).nspins,2^H(n).nspins);
    for k=1:H(n).nspins
        spoil=spoil+(angle*H(n).Iz(:,:,k));
    end
    
    %Do matrix multiplication;
    p=expm(1i*spoil);
    d_out{n} = p' * d_in{n} * p;
end


